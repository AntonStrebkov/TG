import logging
import random

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, Filters

reply_keyboard = [['/info', '/play', '/close']]
stop_keyboard = [['/stop']]

markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False)
stop_markup = ReplyKeyboardMarkup(stop_keyboard, one_time_keyboard=False)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)

TOKEN = ''

candy = 0
def start(update, context):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å!",
        reply_markup=markup
    )

def info(update, context):
    update.message.reply_text("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã!\n"
                              "–í –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç üç¨üç¨üç¨\n"
                              "–ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç –∫–æ–Ω—Ñ–µ—Ç—ã, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ 28 —à—Ç—É–∫ üç≠üç≠üç≠\n"
                              "–ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º –≤–æ–∑—å–º–µ—Ç –∫–æ–Ω—Ñ–µ—Ç—ã!üèÜ")

def close(update, context):
    update.message.reply_text("–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á!üëç",
    reply_markup=ReplyKeyboardRemove())

def play(update, context):
    update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ üç¨ –≤ –∏–≥—Ä–µ: ", reply_markup=stop_markup)
    return 1


def play_get_candy(update, context):
    global candy
    candy = int(update.message.text)
    update.message.reply_text("–°–∫–æ–ª—å–∫–æ üç¨ –≤—ã –≤–æ–∑—å–º–µ—Ç–µ?: ")
    return 2


def player_1(update, context):
    global candy
    try:
        tap = int(update.message.text)
        if 1 <= tap <= 28:
            candy -= int(update.message.text)
            update.message.reply_text(f"üç¨ –æ—Å—Ç–∞–ª–æ—Å—å: {candy}.")
        else:
            update.message.reply_text("–í–æ–∑—å–º–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!")
            return 2
        if candy > 28:
            #temp = random.randint(1, 28)
            temp = candy % 29
            if candy % 29 == 0:
                temp = 28
            candy -= temp
            update.message.reply_text(f"–ë–æ—Ç –≤–∑—è–ª {temp} üç¨.\n"
                                      f"üç¨ –æ—Å—Ç–∞–ª–æ—Å—å: {candy}.")
        # elif candy == 0:
        #     update.message.reply_text("–í—ã –ø–æ–±–µ–¥–∏–ª–∏!üòå", reply_markup=markup)
        #     return ConversationHandler.END
        # elif candy > 28:
        #         update.message.reply_text("–°–∫–æ–ª—å–∫–æ üç¨ –≤—ã –≤–æ–∑—å–º–µ—Ç–µ?")
        #         return 2
            if candy > 28:
                update.message.reply_text("–°–∫–æ–ª—å–∫–æ üç¨ –≤—ã –≤–æ–∑—å–º–µ—Ç–µ?: ")
            else:
                update.message.reply_text("–í—ã –ø–æ–±–µ–¥–∏–ª–∏!üòå", reply_markup=markup)
                return ConversationHandler.END
            return 2
        else:
            update.message.reply_text("–ü–æ–±–µ–¥–∏–ª –±–æ—Ç!üòî", reply_markup=markup)
        return ConversationHandler.END
    except ValueError: update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
    return 2

def stop(update, context):
    update.message.reply_text("–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!üëç", reply_markup=markup)
    return ConversationHandler.END

play_handler = ConversationHandler(
        entry_points=[CommandHandler('play', play)],
        states={
            1: [MessageHandler(Filters.text & ~Filters.command, play_get_candy)],
            2: [MessageHandler(Filters.text & ~Filters.command, player_1)]

        },
        fallbacks=[CommandHandler('stop', stop)]
    )

def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    dp.add_handler(play_handler)
    dp.add_handler(CommandHandler("info", info))
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("close", close))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
